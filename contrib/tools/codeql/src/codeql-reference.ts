import "module-alias/register";
import { BCVE, Dir } from "@types";
import { readExportFile, readJSONFile } from "@util";
import * as fs from "fs";
import * as I from "immutable";
import * as path from "path";

async function getCodeQlReferenceResults(
  bcves: BCVE[],
  resultDir: Dir,
  referenceDir: Dir
) {
  let cves = I.Set(bcves.map(t => t.CVE));
  console.log(`Copying reference results from ${referenceDir} to ${resultDir}`);
  fs.readdirSync(referenceDir)
    .map(f => path.join(referenceDir, f))
    .filter(f => cves.includes(JSON.parse(fs.readFileSync(f, "utf8")).CVE))
    .forEach(f => fs.copyFileSync(f, path.join(resultDir, path.basename(f))));
  console.log("Done");
}

let referenceDir = process.argv[2],
  resultDir = process.argv[3],
  targetsFile = process.argv[4],
  bcves = readExportFile(targetsFile);

let p = getCodeQlReferenceResults(bcves, resultDir, readJSONFile(referenceDir));
p.then(() => process.exit(0)).catch(e => {
  console.error(e);
  process.exit(1);
});
