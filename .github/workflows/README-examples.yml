# Sanity checks the various README examples of how to use the tooling. This is kept up to date manually.
name: README examples
on:
  pull_request:

jobs:
  intro-examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # this is the first thing most users will try, so create a large matrix
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11.0, windows-latest]
        node: [12,14]
        include:
          - os: ubuntu-latest
            script-extension: sh
          - os: macos-latest
            script-extension: sh

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: |
          npm ci
          npm run-script build

      - name: run (non-windows)
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        run: |
          ./contrib/tools/eslint/installers/install.sh ${ESLINT}
          echo '{ "tools": { "eslint-demo": { "bin": "node", "args": [ "build/ts/contrib/tools/eslint/src/eslint.js" ], "options": { "eslintDir": "'"${ESLINT}"'"}}}}' > config.json
          CVES="CVE-2018-16492 CVE-2020-4066"
          bin/cli download-commits --anonymous $CVES
          bin/cli run --tool eslint-demo $CVES
          bin/cli report --kind txt --tool eslint-demo $CVES
          cat work/reports/Overview-table.txt
          cat work/reports/Delta-alert-counts_negative_some-TPs-table.txt
        env:
          ESLINT: ${{ runner.temp }}/eslint-demo

      - name: run (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          ./contrib/tools/eslint/installers/install.cmd $env:ESLINT
          "{ `"tools`": { `"eslint-demo`": { `"bin`": `"node`", `"args`": [ `"build\ts\contrib\tools\eslint\src\eslint.js`" ], `"options`": { `"eslintDir`": `"$env:ESLINT`"}}}}" -replace '[\\]', '/' | Out-File -Encoding UTF8 config.json
          $CVES = "CVE-2018-16492", "CVE-2020-4066"
          bin\cli.cmd download-commits --anonymous $CVES
          bin\cli.cmd run --tool eslint-demo $CVES
          bin\cli.cmd report --kind txt --tool eslint-demo $CVES
          type work\reports\Overview-table.txt
          type work\reports\Delta-alert-counts_negative_some-TPs-table.txt
        env:
          ESLINT: ${{ runner.temp }}\eslint-demo

      - uses: actions/upload-artifact@v2
        with:
          name: reports_${{ matrix.os }}
          path: work/reports

  selector-examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: |
          npm ci
          npm run-script build
      - name: list
        run: |
          bin/cli list '*'
          bin/cli list CVE-2020-15119
          bin/cli list CVE-2017-0931
          bin/cli list year:2020
          bin/cli list ext:js
          bin/cli list CWE-079
          bin/cli list mitre-cwe-top:25:2020
          bin/cli list incomplete

      - name: filter
        run: |
          bin/cli list '*' | bin/cli filter CVE-2020-15119
          bin/cli list '*' | bin/cli filter CVE-2017-0931
          bin/cli list '*' | bin/cli filter CVE-2020-15119 CVE-2017-0931
          bin/cli list '*' | bin/cli filter year:2020
          bin/cli list '*' | bin/cli filter ext:js
          bin/cli list '*' | bin/cli filter CWE-079
          bin/cli list '*' | bin/cli filter mitre-cwe-top:25:2020
          bin/cli list '*' | bin/cli filter incomplete

      - name: filter -v
        run: |
          bin/cli list '*' | bin/cli filter -v CVE-2020-15119
          bin/cli list CVE-2020-15119 | bin/cli filter -v CVE-2020-15119
          bin/cli list CVE-2020-15119 CVE-2017-0931 | bin/cli filter -v CVE-2020-15119
          bin/cli list CVE-2020-15119 CVE-2017-0931 | bin/cli filter -v CVE-2020-15119 CVE-2017-0931
